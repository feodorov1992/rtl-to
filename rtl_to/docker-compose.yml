version: "3.9"

volumes:
  static-data:
    driver: vieux/sshfs:latest
    driver_opts:
      sshcmd: "${FS_USER}@${FS_HOST}:${FS_PATH}"
      password: "${FS_PASSWD}"
      allow_other: ""

services:
  app:
    build:
      context: .
    restart: always
    stdin_open: true
    tty: true
    volumes:
      - ./app:/app
      - static-data:/vol/web
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}
      - DEBUG=${DEBUG}
      - DADATA_TOKEN=${DADATA_TOKEN}
      - DADATA_SECRET=${DADATA_SECRET}
      - ALLOW_TO_SEND_MAIL=${ALLOW_TO_SEND_MAIL}
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-external-labels: job=app,owner=ruan,environment=prod

  proxy:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - app
    ports:
      - "80:80"
      - "8080:8080"
    environment:
      - APP_HOST=app
      - APP_PORT=9000
      - LISTEN_PORT=80
      - LISTEN_TECH_API_PORT=8080
      - TECH_API_PORT=9090
    volumes:
      - static-data:/vol/static
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-external-labels: job=nginx,owner=ruan,environment=prod

  loki:
    image: grafana/loki:latest
    restart: always
    volumes:
      - ./loki/loki.yaml:/etc/config/loki.yaml
    ports:
      - "3100:3100"

  redis:
    image: redis:alpine
    restart: unless-stopped

  celery:
    restart: unless-stopped
    build:
      context: .
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}
      - DEBUG=${DEBUG}
      - DADATA_TOKEN=${DADATA_TOKEN}
      - DADATA_SECRET=${DADATA_SECRET}
      - ALLOW_TO_SEND_MAIL=${ALLOW_TO_SEND_MAIL}
    command: celery -A rtl_to worker -l info
    volumes:
      - ./app:/app
      - static-data:/vol/web
    depends_on:
      - redis
      - app
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-external-labels: job=celery,owner=ruan,environment=prod

  celery-beat:
    restart: unless-stopped
    build:
      context: .
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}
      - DEBUG=${DEBUG}
      - DADATA_TOKEN=${DADATA_TOKEN}
      - DADATA_SECRET=${DADATA_SECRET}
      - ALLOW_TO_SEND_MAIL=${ALLOW_TO_SEND_MAIL}
    command: celery -A rtl_to beat -l info -s /tmp/celerybeat-schedule
    volumes:
      - ./app:/app
      - static-data:/vol/web
    depends_on:
      - redis
      - app
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-external-labels: job=celery-beat,owner=ruan,environment=prod